/*
Deployment script for TechnicalTestDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "TechnicalTestDB"
:setvar DefaultFilePrefix "TechnicalTestDB"
:setvar DefaultDataPath "C:\Users\micha\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\micha\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Starting rebuilding table [dbo].[Enrolment]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Enrolment] (
    [EnrolmentID]  NVARCHAR (MAX) NOT NULL,
    [MemberID]     NVARCHAR (MAX) NOT NULL,
    [MembershipID] NVARCHAR (MAX) NOT NULL,
    PRIMARY KEY CLUSTERED ([EnrolmentID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Enrolment])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Enrolment] ([EnrolmentID], [MemberID], [MembershipID])
        SELECT   [EnrolmentID],
                 [MemberID],
                 [MembershipID]
        FROM     [dbo].[Enrolment]
        ORDER BY [EnrolmentID] ASC;
    END

DROP TABLE [dbo].[Enrolment];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Enrolment]', N'Enrolment';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Member]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Member] (
    [MemberID]     NVARCHAR (MAX) NOT NULL,
    [FirstName]    NVARCHAR (50)  NOT NULL,
    [LastName]     NVARCHAR (50)  NOT NULL,
    [EmailAddress] NVARCHAR (MAX) NOT NULL,
    PRIMARY KEY CLUSTERED ([MemberID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Member])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Member] ([MemberID], [FirstName], [LastName], [EmailAddress])
        SELECT   [MemberID],
                 [FirstName],
                 [LastName],
                 [EmailAddress]
        FROM     [dbo].[Member]
        ORDER BY [MemberID] ASC;
    END

DROP TABLE [dbo].[Member];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Member]', N'Member';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Membership]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Membership] (
    [MembershipID]   NVARCHAR (MAX) NOT NULL,
    [MembershipType] NCHAR (10)     NOT NULL,
    [Discount]       TINYINT        NOT NULL,
    [Balance]        FLOAT (53)     NOT NULL,
    PRIMARY KEY CLUSTERED ([MembershipID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Membership])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Membership] ([MembershipID], [MembershipType], [Discount], [Balance])
        SELECT   [MembershipID],
                 [MembershipType],
                 [Discount],
                 [Balance]
        FROM     [dbo].[Membership]
        ORDER BY [MembershipID] ASC;
    END

DROP TABLE [dbo].[Membership];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Membership]', N'Membership';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[FK_Enrolment_Member]...';


GO
ALTER TABLE [dbo].[Enrolment] WITH NOCHECK
    ADD CONSTRAINT [FK_Enrolment_Member] FOREIGN KEY ([MemberID]) REFERENCES [dbo].[Member] ([MemberID]);


GO
PRINT N'Creating [dbo].[FK_Enrolment_Membership]...';


GO
ALTER TABLE [dbo].[Enrolment] WITH NOCHECK
    ADD CONSTRAINT [FK_Enrolment_Membership] FOREIGN KEY ([MembershipID]) REFERENCES [dbo].[Membership] ([MembershipID]);


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Enrolment] WITH CHECK CHECK CONSTRAINT [FK_Enrolment_Member];

ALTER TABLE [dbo].[Enrolment] WITH CHECK CHECK CONSTRAINT [FK_Enrolment_Membership];


GO
PRINT N'Update complete.';


GO
